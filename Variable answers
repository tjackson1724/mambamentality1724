1. Scope is the range of code that a variable can be accessed within, 
If a variable is defined outside of a function it is a global variable,& can be accessed anywhere in the code, 
& even across files in some cases.  

A variable defined within a function has block scope,& can only be accessed within that function.  
When the function completes its execution, the variable essentially disappears, or can no see be accessed. 
 
If a global variable is created, & then a variable with the same name is created within a function, 
any changes to the variable value that happen within the function will not affect the global variable of the same name.

2. Global variables can create side effects, unintentional manipulation of a variable's value that can affect other parts of the code and make troubleshooting difficult.  
Ex. 
A variable is used within a function but is not defined there, a function will look outwards into the parent scope until it finds where the variable has been defined. 
 
If the variable is global, it's value will be manipulated by the function and this altered value will be used anywhere it is referenced later in the code.  

Using global variables also makes it difficult to collaborate with other programmers on a project, 
as when the code is put together, a global variable could be altered unintentionally by someone else's part of the code. 

 Functions should be kept determinate whenever possible, meaning that no matter what happens outside the function, if given the same inputs, it will always return the same value.

3. Strict mode does not allow the programmer to declare a variable without the "let" or "const" keywords, 
that way a new variable is always being created within a function instead of potentially accessing a global variable.  Strict mode can be activated with by putting the "use strict" command at the top of the file or function.

4. A side effects is the unintentional manipulation of a variable's value that can affect other parts of the code and make troubleshooting difficult.  
It occurs when a function reaches outside of its local scope to find where a variable has been declared, and alters the value of the variable somewhere in its parent scope.  
A pure function is one that is both free of side effects and is determinate if given the same inputs, it always returns the same value.
